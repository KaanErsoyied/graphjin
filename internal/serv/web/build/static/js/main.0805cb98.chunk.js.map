{"version":3,"sources":["../node_modules/graphql-language-service-interface/dist sync /^.*$","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","fetch","window","arguments","credentials","Promise","apply","global","App","style","background","color","letterSpacing","height","display","alignItems","textDecoration","margin","fontSize","textTransform","marginLeft","paddingRight","borderRight","store","endpoint","settings","Component","ReactDOM","render","document","getElementById"],"mappings":"+EAAA,IAAIA,EAAM,CACT,IAAK,GACL,KAAM,GACN,2BAA4B,IAC5B,8BAA+B,IAC/B,mCAAoC,IACpC,sBAAuB,GACvB,yBAA0B,GAC1B,8BAA+B,IAC/B,+BAAgC,GAChC,kCAAmC,GACnC,uCAAwC,IACxC,kBAAmB,GACnB,qBAAsB,GACtB,0BAA2B,IAC3B,mBAAoB,GACpB,sBAAuB,GACvB,2BAA4B,IAC5B,wBAAyB,GACzB,2BAA4B,GAC5B,gCAAiC,IACjC,eAAgB,IAChB,kBAAmB,IACnB,uBAAwB,IACxB,UAAW,GACX,aAAc,GACd,kBAAmB,KAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,uHCzCdY,G,OAAQC,OAAOD,OACrBC,OAAOD,MAAQ,WAEb,OADAE,UAAU,GAAGC,YAAc,UACpBC,QAAQP,QAAQG,EAAMK,MAAMC,EAAQJ,a,IAGvCK,E,uKAEF,OACE,6BACE,4BAAQC,MAAO,CACbC,WAAY,UACZC,MAAO,UACPC,cAAe,UACfC,OAAQ,OACRC,QAAS,OACTC,WAAY,WAGZ,wBAAIN,MAAO,CACTO,eAAgB,OAChBC,OAAQ,MACRC,SAAU,SAIZ,0BAAMT,MAAO,CACXU,cAAe,YACfC,WAAY,OACZC,aAAc,OACdC,YAAa,mBAJf,eAQA,0BAAMb,MAAO,CACXS,SAAU,OACVE,WAAY,OACZT,MAAO,SAHT,qBASF,kBAAC,WAAD,CAAUY,MAAOA,SACjB,kBAAC,aAAD,CACEC,SAAS,kBACTC,SAAS,iK,GAxCDC,aAsDHlB,Q,yFClEf,qDAKAmB,IAASC,OAAO,kBAAC,IAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0805cb98.chunk.js","sourcesContent":["var map = {\n\t\".\": 61,\n\t\"./\": 61,\n\t\"./GraphQLLanguageService\": 117,\n\t\"./GraphQLLanguageService.js\": 117,\n\t\"./GraphQLLanguageService.js.flow\": 315,\n\t\"./autocompleteUtils\": 91,\n\t\"./autocompleteUtils.js\": 91,\n\t\"./autocompleteUtils.js.flow\": 316,\n\t\"./getAutocompleteSuggestions\": 77,\n\t\"./getAutocompleteSuggestions.js\": 77,\n\t\"./getAutocompleteSuggestions.js.flow\": 317,\n\t\"./getDefinition\": 92,\n\t\"./getDefinition.js\": 92,\n\t\"./getDefinition.js.flow\": 318,\n\t\"./getDiagnostics\": 94,\n\t\"./getDiagnostics.js\": 94,\n\t\"./getDiagnostics.js.flow\": 319,\n\t\"./getHoverInformation\": 95,\n\t\"./getHoverInformation.js\": 95,\n\t\"./getHoverInformation.js.flow\": 320,\n\t\"./getOutline\": 116,\n\t\"./getOutline.js\": 116,\n\t\"./getOutline.js.flow\": 321,\n\t\"./index\": 61,\n\t\"./index.js\": 61,\n\t\"./index.js.flow\": 322\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 163;","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { Playground, store } from '@apollographql/graphql-playground-react'\n\nimport './index.css'\n\nconst fetch = window.fetch\nwindow.fetch = function() {\n  arguments[1].credentials = 'include'\n  return Promise.resolve(fetch.apply(global, arguments))\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <header style={{\n          background: '#09141b', \n          color: '#03a9f4',\n          letterSpacing: '0.15rem',\n          height: '65px',\n          display: 'flex',\n          alignItems: 'center'\n          }}\n        >\n          <h3 style={{\n            textDecoration: 'none',\n            margin: '0px',\n            fontSize: '18px',\n\n            }}\n          >\n          <span style={{ \n            textTransform: 'uppercase',\n            marginLeft: '20px',\n            paddingRight: '10px',\n            borderRight: '1px solid #fff'\n          }}>\n            Super Graph\n          </span>\n          <span style={{ \n            fontSize: '16px',\n            marginLeft: '10px',\n            color: '#fff'\n          }}>\n            Instant GraphQL</span>\n          </h3>\n        </header>\n\n        <Provider store={store}>\n        <Playground \n          endpoint=\"/api/v1/graphql\"\n          settings=\"{\n            'schema.polling.enable': false,\n            'request.credentials': 'include',\n            'general.betaUpdates': true,\n            'editor.reuseHeaders': true,\n            'editor.theme': 'dark'\n          }\"\n        />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}