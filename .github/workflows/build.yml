name: Build

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
     branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: make build

    - name: Test
      run: make test

    - name: Lint
      run: make lint
      
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      
      - name: Set up Snapcraft
        run: |
          sudo apt-get update
          sudo apt-get -yq --no-install-suggests --no-install-recommends install snapcraft
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      
      - name: Cache Go modules
        uses: actions/cache@v2.1.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
                   
      - name: Lint
        run: make lint
        
      - name: Test
        run: make test

      - name: Check
        run: ./goreleaser check
      
      - name: Snapcraft Login
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
        run: |
          snapcraft login --with <(echo "$SNAPCRAFT_LOGIN")
      
      - name: GoReleaser
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            ./goreleaser
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            ./goreleaser --snapshot
          fi

